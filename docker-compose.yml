version: '3.6'
services:
  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: webserver
    restart: unless-stopped
    volumes:
      - ./app/:/usr/share/nginx/html
      - ./beginsbetter.crt:/etc/ssl
      - ./p8_key.ey:/etc/ssl
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - flask
    networks:
      - frontend
      - backend
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  mlflow_server:
        restart: always
        build: ./mlflow
        image: mlflow_img
        container_name: mlflow_container
        ports:
            - 8000:5000
        depends_on:
            - database  
        networks:
            - frontend
            - backend
        env_file:
            - web.env
        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql_db:3306/${MYSQL_DATABASE} --artifacts-destination s3://mlflow-bucket-simplon/mlflow/ --serve-artifacts -h 0.0.0.0 -p 5000
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    user: root
    links:
      - database
    restart: unless-stopped
    volumes:
        - ./app:/home/www/
    env_file:
        - web.env
    ports:
        - 8080:5090
    depends_on:
        - database  
    networks:
      - frontend
      - backend
  database:
    container_name: mysql_db
    image: mysql:5.7.38
    restart: always
    ports:
      - 3306:3306
    env_file:
      - web.env
    volumes:
      - ./mysql-data:/var/lib/mysql
      - mysql-data-config:/etc/mysql
      - ./app/sql:/docker-entrypoint-initdb.d
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  mysql-data-config:
    driver: local
  nginxdata:
    driver: local
