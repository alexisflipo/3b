name: CI-preprod
on:  
  pull_request:
    branches:
      - master
      - hotfix/*
  push:
    branches:
    - master

  workflow_dispatch:

# env:
#   REGISTRY: ${{ secrets.DIGITAL_OCEAN_REGISTRY }}
#   IMAGE_NAME: "3b_app"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout files
        uses: actions/checkout@v2

      - name: Build multiple images via docker-compose
        # run: cd app/ && docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
        run: docker-compose build 

      # - name: Install doctl
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # - name: Log in to DigitalOcean Container Registry with short-lived credentials
      #   run: doctl registry login --expiry-seconds 600

      # - name: Remove all old images
      #   run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      # - name: Push image to DigitalOcean Container Registry
      #   run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    if: github.event.pull_request.merged == true
    steps:
    #   - name: Copy file via scp
    #     uses: appleboy/scp-action@master
    #     env:
    #       HOST: ${{ secrets.HOST }}
    #       USERNAME: ${{ secrets.DROPLET_USER }}
    #       PORT: ${{ secrets.PORT }}
    #       KEY: ${{ secrets.SSH }}
    #     with:
    #       source: '.'
    #       target: '/app/3b'
    #       script: |
    #         git pull origin docker_nginx
    #         echo 'Cloning repo successfully'
      
    - name: Deploy to Digital Ocean droplet via SSH action
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.SSH }}
        PORT: ${{ secrets.PORT }}
        # password: ${{ secrets.PASSHPRASE }}
        envs: GITHUB_SHA
        script: |
          cd app/3b
          git pull origin master
          
    - name: Up docker-compose
      uses: appleboy/ssh-action@v0.1.3
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
    # So you don't have to use root, but you can if you like
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
    # You can use whatever password you like
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        host: ${{ secrets.HOST }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.SSH }}
        PORT: ${{ secrets.PORT }}
        envs: GITHUB_SHA
        script: |
        docker-compose docker-compose.yml up -d
          docker-compose docker-compose.yml up -d