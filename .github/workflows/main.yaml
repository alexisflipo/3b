name: CI-preprod
on:  
  pull_request:
    branches:
      - master
      - hotfix/*
  push:
    branches:
    - master

  workflow_dispatch:


jobs:
  
  deploy:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH }}
          PORT: ${{ secrets.PORT }}
          envs: GITHUB_SHA
          script: |
            cd app/3b
            git restore .
            git pull origin master

      - name: Up docker-compose
        uses: appleboy/ssh-action@v0.1.3
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
          FLASK_SECRET_KEY: ${{secrets.FLASK_SECRET_KEY}}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH }}
          PORT: ${{ secrets.PORT }}
          script_stop: true
          command_timeout:  20m
          envs: GITHUB_SHA
          script: |
            cd app/3b/
            touch web.env
            echo MYSQL_DATABASE='${{ secrets.MYSQL_DATABASE }}' >> web.env
            echo MYSQL_PASSWORD='${{ secrets.MYSQL_PASSWORD }}' >> web.env
            echo MYSQL_USER='${{ secrets.MYSQL_USER }}' >> web.env
            echo MYSQL_ROOT_PASSWORD='${{ secrets.MYSQL_ROOT_PASSWORD }}' >> web.env
            echo AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}} >> web.env
            echo AWS_SECRET_ACCESS_KEY= ${{secrets.AWS_SECRET_ACCESS_KEY}} >> web.env
            echo AWS_DEFAULT_REGION= '${{secrets.AWS_DEFAULT_REGION}}' >> web.env
            echo FLASK_SECRET_KEY='${{secrets.FLASK_SECRET_KEY}}' >> web.env
            docker-compose build --no-cache
            docker-compose up -d
